---

- name: "Deploy the Docker {{ apiName }} container"
  hosts: "{{ apiEnv }}"
  gather_facts: false
  become: true
  become_method: sudo
  become_user: root


  tasks:
  - name: Create the {{ apiName }} code dir
    file:
      path: /opt/novapointcode/{{ apiName }}
      state: directory
      mode: 0755
      group: root
      owner: root
         
  - name: "Copy {{ apiName }} dockerfile and {{ apiName }} code"
    copy:
     src: "{{ item }}"
     dest: /opt/novapointcode/{{ apiName }}
     mode: 0755
     owner: root
     group: root
    with_items:
     ['{{ workSpace }}/dock-playbook/Dockerfiles/','{{ workSpace }}/asset-api']

  - name: Check container status
    docker_container_info:
       name: "{{ apiName }}"
    register: container_running
  - debug: var=container_running.exists

  - name: Stop the existing the {{ apiName }} container
    docker_container:
      name: "{{ apiName }}"
      state: stopped
    when: container_running.exists == true

  - name: Remove the stopped the {{ apiName }} container
    docker_container:
      name: "{{ apiName }}"
      state: absent
    when: container_running.exists == true

  - name: Build an  {{ apiName }} image and push it to a {{ apiName }} repo
    docker_image:
      name: 18.218.154.137:8083/docker-private/{{ apiName }}
      build:
        path: /opt/novapointcode/{{ apiName }}
      tag: "{{ tagName }}"
      state: present
      force: yes

  - name: Run the docker {{ apiName }} container
    docker_container:
      name: "{{ apiName }}"
      image: 18.218.154.137:8083/docker-private/{{ apiName }}:{{ tagName }}
      state: started
      ports:
        - "9000:9000"
        - "9443:9443"
      volumes:
        - /var/log:/logs
    
  - name: Remove if  apiName dockerfile and code dir exists
    file:
       path: /opt/novapointcode/{{ apiName }}
       state: absent
