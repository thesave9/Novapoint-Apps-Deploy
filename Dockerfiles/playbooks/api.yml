---

 - name: Deploy the Docker {{ apiName }} container
   hosts: "{{ apiEnv }}"
   gather_facts: no
   become: true
   become_method: sudo
   become_user: root


   tasks:
   - name: Log into private {{ apiName }} registry
     docker_login:
       registry_url: 18.218.154.137:8083
       username: admin
       password: admin123
       reauthorize: yes

   - name: "Check {{ apiName }} dockerfile and {{ apiName }} code dir exists"
     stat: path=/opt/novapointcode/{{ apiName }}
     register: dir_status

   - name: Remove if  apiName dockerfile and code dir exists
     file:
       path: /opt/novapointcode/{{ apiName }}
       state: absent
     when: dir_status.stat.exists == true
     register: removed_dir

   - name: Create the {{ apiName }} code dir
     file:
       path: /opt/novapointcode/{{ apiName }}
       state: directory
       mode: 0755
       group: root
       owner: root
     when: removed_dir.changed == true
     register: created

   - name: "Rsync {{ apiName }} dockerfile and {{ apiName }} code"
     copy:
      src: "{{ workSpace }}/docker/Dockerfiles/*"
      dest: /opt/novapointcode/{{ apiName }}
      mode: 0755
      owner: root
      group: root
     register: copied_files
     when: created.changed == true

   - name: Check container status
     docker_container_info:
       name: "{{ apiName }}"
     register: container_running
   - debug: var=container_running.exists

   - name: Stop the existing the {{ apiName }} container
     docker_container:
      name: "{{ apiName }}"
      state: stopped
     when: container_running.exists == true

   - name: Remove the stopped the {{ apiName }} container
     docker_container:
      name: "{{ apiName }}"
      state: absent
     when: container_running.exists == true

   - name: Build an  {{ apiName }} image and push it to a {{ apiName }} repo
     docker_image:
      name: 18.218.154.137:8083/docker-private/{{ apiName }}
      build:
        path: /opt/novapointcode/{{ apiName }}
      tag: "{{ tagName }}"
      state: build
      force: yes

   - name: Log into private {{ apiName }} registry
     docker_login:
       registry_url: 18.218.154.137:8083
       username: admin
       password: admin123
       reauthorize: yes

   - name: Docker push to repo
     command:  docker push 18.218.154.137:8083/docker-private/{{ apiName }}:{{ tagName }}
     register: push
   - debug: msg="{{ push.stdout }}"
   - debug: msg="{{ push.stderr }}"


   - name: Run the docker {{ apiName }} container
     docker_container:
      name: "{{ apiName }}"
      image: 18.218.154.137:8083/docker-private/{{ apiName }}:{{ tagName }}
      state: started
      ports:
        - "80:80"
        - "443:443"
